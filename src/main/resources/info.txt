redis特性
    速度快  10W OPS  读写 存储在内存之中 主要原因 线程模式：单线程
    持久化 数据保存在内存之中，但将数据异步的保存在磁盘上
    多种数据结构 string hash linkList set ,sorted sets;bitMaps 位图  ；HyperLogLog：嘲笑内存唯一值技术（可能存在误差率）；GEO地理位置定位
    支持多种语言
    功能丰富 发布订阅 LUA脚本  简单事务 pipeline
    简单 23000行代码，不依赖外部库 ，单线程线程模型
    主从复制
    高可用，分布式
使用场景
    缓存系统

    计数器
    消息队列
    排行榜
    社交网络
    实时系统
redis 的安装与部署
    获取 tar.gz的包  wget http://download.redis.io/releases/redis-3.0.7.tar.gz
    tar -zxvf xxxx.tar.gz
    ln -s redis-3.0.7 redis 建立软连接
    make  在src目录中出现 如下6个文件
        redis-server  redis 服务器
        redis-cli redis  命令行客户端
        redis-benchmark  基准测试，测试性能
        redis-check-aof  对aof文件进行修复
        redis-check-dump RDB文件修复工具
        redis-sentinel  启动 redis-sentinel 节点，高可用
    make install 会将上述6个拷贝到usr/local/bin目录下

    三种启动方法
        最简启动  执行redis-server  命令
        动态参数启动   6379 redis-server --port 6380
        配置文件启动(推荐)
    redis 客户端连接
        redis-cli -h 127.0.0.1 -p 6379
        test:  ping     return  pang
    redis 返回值
        ping -- pang
        错误回复
        整数回复
        字符串回复
        多行字符串回复
redis 常用配置
    daemonize 是否为守护线程 yes/no(建议yes)
    port  端口
    logfile 日志名
    dir  redis工作目录 日志，和持久化文件  6379-》merz 意大利女歌手的名字
    查看配置文件时，将一些#，和一些空格去掉 cat redis.conf | grep -v "#" | grep -v "^$" > redis-6380.conf
    建议使用redis-server redis.conf 这样的配置文件的方式启动程序

redisAPI的使用和理解
    通用命令
        keys *   热备从节点  scan   O(n)
            keys he*
            keys he[h-j]*
            keys ph?
            等等通配符
        dbsize  算出key的总数  O(1)
        exists key  O(1)
        del key  O(1)
        expire key seconds 过期时间  O(1)
        type key  O(1)
        ttl key 查看剩余过期时间  O(1)
        persist key 去掉key的过期时间  O(1)
        type key  返回key的类型  string hash list set zset none  O(1)
    字符串类型
    哈希
    列表
    集合
    有序集合

    单线程
        所有命令都是串行的，单线程的，一个瞬间，只会执行一条命令
        为什么单线程还这么块？
        1.纯内存*
        2.非阻塞IP
        3.避免了线程切换和竞争

        拒绝长命令 keys，flushall 等，会使线程阻塞

    字符串
        结构和命令
            key          value 不能大于512MB
            常用于 缓存 计数器  分布式锁 等等
            incr 自增1 decr自建1 incrby 自增n decrby 自减1
            实现 网站用户访问量
            incr userid:pageview

            缓存视频的基本信息

            多客户端并发获取自增id

            set key value  覆盖
            setnx key value  不存在，再能设置，新增
            set key value xx 存在，才能设这，更新

            mget key1 key2
            mset key1 value1 key2 value2

            getset key newvalue 设置新值，返回老值
            append key value 对某一个key的value进行追加
            strlen key 获取字符串长度，注意中文

            incrbyfloat key 3.5 自增
            getrange key 0 3 获取字符串中的某些值
            setrange key 0 3
        内部编码


        哈希
            特点
            重要api
            hash vs string







